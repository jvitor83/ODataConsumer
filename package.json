{
  "name": "ODataConsumer",
  "version": "0.1.0",
  "license": "MIT",
  "angular-cli": {},
  "config": {
    "name": "ODataConsumer",
    "shortname": "ODataConsumer",
    "color": "#ffa700"
  },
  "scripts": {
    "start": "npm run ng -- serve --port 5555",
    "serve": "npm run concurrently -- --kill-others \"npm run build.watch\" \"npm run wait && npm run ionic.serve\"",
    "start.mobile": "npm run concurrently -- --kill-others \"npm run build.watch\" \"npm run wait && npm run ionic.livesync\"",
    "serve.mobile": "npm run start.mobile",
    "docker.build": "docker build -f Dockerfile -t angular-pwa-seed . -f Dockerfile-build",
    "docker.build.force": "docker build --no-cache -f Dockerfile -t angular-pwa-seed . -f Dockerfile-build",
    "docker.run": "docker run -p 5555:5555 -t -d --name angular-pwa-seed-container --rm angular-pwa-seed",
    "docker.run.interative": "docker run -p 5555:5555 --name angular-pwa-seed-container --rm -i -t angular-pwa-seed bash",
    "docker.exec.script": "docker exec angular-pwa-seed-container npm run",
    "docker.stop": "docker rm angular-pwa-seed-container -f",
    "docker.copy": "docker cp angular-pwa-seed-container:/usr/src/app/www ./www",
    "docker.build.host": "docker build -t angular-pwa-seed-host . -f Dockerfile-host",
    "docker.run.host": "docker run --name angular-pwa-seed-host-container -d -p 5555:80 angular-pwa-seed-host",
    "docker.stop.host": "docker rm angular-pwa-seed-host-container -f",
    "wait": "npm run sleepms -- 40000",
    "lint": "ng lint",
    "test": "ng test",
    "pree2e": "webdriver-manager update",
    "e2e": "ng e2e",
    "pwa.manifest": "cd src && \"./../node_modules/.bin/cross-conf-env\" pwa-manifest --name=\"npm_package_config_name\" --short_name=\"npm_package_config_shortname\" --background_color=\"npm_package_config_color\" --theme_color=\"npm_package_config_color\" ./ ./assets/pwa/ --start_url=./index.html --display=standalone --orientation=any --direction=portrait --icons=./assets/icon.png",
    "postpwa.manifest": "./node_modules/.bin/replace \"(\\\\{2})\" \"/\" src/manifest.json",
    "config.theme": "npm run config.theme:title && npm run config.theme:toolbar && npm run config.theme:color",
    "config.theme:toolbar": "./node_modules/.bin/cross-conf-env \"./node_modules/.bin/replace\" \"(<title\\b[^>]*>)[^<>]*(</title>)\" \"<title>npm_package_config_name</title>\" src/index.html",
    "config.theme:title": "./node_modules/.bin/cross-conf-env \"./node_modules/.bin/replace\" \"(<ion-title\\b[^>]*>)[^<>]*(</ion-title>)\" \"<ion-title>npm_package_config_name</ion-title>\" src/app/layout/header/header.component.html",
    "config.theme:color": "./node_modules/.bin/cross-conf-env \"./node_modules/.bin/replace\" \"^\\$theme-color:\\s*(.*);$\" \"$theme-color: npm_package_config_color;\" src/theme/theme.scss",
    "resources": "./node_modules/.bin/ionic resources && npm run resources.copy && npm run pwa.manifest && npm run config.theme",
    "resources.copy": "./node_modules/.bin/cpx \"resources/**/*\" src/assets",
    "build": "npm run ng -- build",
    "build.watch": "npm run build -- -w",
    "build.dev": "npm run build -- --dev",
    "build.prod": "npm run build -- --prod",
    "build.prod.aot": "npm run build -- --prod --aot",
    "build.prod.exp": "npm run build.prod.aot",
    "prepublish.prod": "npm run resources",
    "publish.prod": "npm run build.prod",
    "prepublish.prod.exp": "npm run resources",
    "publish.prod.exp": "npm run build.prod.exp",
    "github.docs": "./node_modules/.bin/cpx \"www/**/*\" docs",
    "postinstall": "npm run concurrently -- \"echo 1\" \"npm run cordova.prepare\" -s first",
    "cordova.prepare": "npm run cordova -- prepare --verbose",
    "cordova.livesync": "npm run cordova -- run -- --live-reload",
    "cordova.serve": "npm run cordova -- serve 5555",
    "start.cordova": "npm run concurrently -- --kill-others \"npm run build.watch\" \"npm run wait && npm run cordova.livesync\"",
    "ionic.serve": "npm run ionic -- serve --port 5555 --all --nogulp",
    "ionic.livesync": "npm run ionic.serve -- --lab",
    "start.ionic": "npm run build && npm run ionic.serve",
    "start.windows": "npm run watch -- \"npm run run.windows\"",
    "prerun.windows": "npm run wait",
    "run.windows": "npm run cordova -- run windows",
    "install.windows": "npm run cordova -- platform rm windows & npm run cordova -- platform add windows --save",
    "start.ubuntu": "npm run watch -- \"npm run run.ubuntu\"",
    "prerun.ubuntu": "npm run wait",
    "run.ubuntu": "npm run build && npm run cordova -- run --device",
    "install.ubuntu": "npm run cordova -- platform rm ubuntu & npm run cordova -- platform add ubuntu --save",
    "start.ios": "npm run watch -- \"npm run run.ios\"",
    "prerun.ios": "npm run wait",
    "run.ios": "npm run cordova -- run ios",
    "install.ios": "npm run cordova -- platform rm ios & npm run cordova -- platform add ios --save",
    "start.osx": "npm run watch -- \"npm run run.osx\"",
    "prerun.osx": "npm run wait",
    "run.osx": "npm run cordova -- run",
    "install.osx": "npm run cordova -- platform rm osx & npm run cordova -- platform add osx --save",
    "start.android": "npm run watch -- \"npm run run.android\"",
    "prerun.android": "npm run wait",
    "run.android": "npm run cordova -- run android",
    "install.android": "npm run cordova -- platform rm android & npm run cordova -- platform add android --save",
    "start.browser": "npm run watch -- \"npm run run.browser\"",
    "prerun.browser": "npm run wait",
    "run.browser": "npm run cordova -- run browser -- --debug --port=5555",
    "install.browser": "npm run cordova -- platform rm browser & npm run cordova -- platform add browser --save",
    "publish.prod.browser": "npm run publish.prod && npm run install.browser && npm run cordova -- build browser --release",
    "watch": "npm run concurrently -- --kill-others \"npm run build.watch\"",
    "precordova": "mkdirp www",
    "cordova": "./node_modules/.bin/cordova",
    "ionic": "./node_modules/.bin/ionic",
    "sleepms": "./node_modules/.bin/sleepms",
    "concurrently": "./node_modules/.bin/concurrently",
    "ng": "./node_modules/.bin/ng",
    "mkdirp": "./node_modules/.bin/mkdirp"
  },
  "private": false,
  "dependencies": {
    "@angular/animations": "4.3.3",
    "@angular/common": "4.3.3",
    "@angular/compiler": "4.3.3",
    "@angular/core": "4.3.3",
    "@angular/forms": "4.3.3",
    "@angular/http": "4.3.3",
    "@angular/platform-browser": "4.3.3",
    "@angular/platform-browser-dynamic": "4.3.3",
    "@angular/router": "4.3.3",
    "@ionic-native/core": "3.12.1",
    "@ionic-native/network": "3.12.1",
    "@ionic-native/splash-screen": "3.12.1",
    "@ionic-native/status-bar": "3.4.4",
    "@ionic/storage": "2.0.1",
    "@progress/kendo-angular-dateinputs": "^1.0.6",
    "@progress/kendo-angular-dropdowns": "^1.1.3",
    "@progress/kendo-angular-excel-export": "^1.0.3",
    "@progress/kendo-angular-grid": "^1.3.2",
    "@progress/kendo-angular-inputs": "^1.1.0",
    "@progress/kendo-angular-intl": "^1.2.2",
    "@progress/kendo-angular-l10n": "^1.0.3",
    "@progress/kendo-angular-layout": "^1.0.5",
    "@progress/kendo-data-query": "^1.0.6",
    "@progress/kendo-drawing": "^1.2.0",
    "@progress/kendo-theme-default": "^2.40.1",
    "bootstrap": "^3.3.7",
    "browser-sync": "2.17.5",
    "cheerio": "0.22.0",
    "core-js": "^2.4.1",
    "csp-parse": "0.0.2",
    "elementtree": "0.1.6",
    "glob": "7.1.1",
    "intl": "^1.2.5",
    "ionic-angular": "3.6.0",
    "ionic-native": "2.9.0",
    "ionicons": "3.0.0",
    "moment": "2.19.3",
    "ng2-charts": "1.6.0",
    "ngx-bootstrap": "1.8.1",
    "oidc-client": "1.3.0",
    "plist": "2.0.1",
    "q": "1.4.1",
    "rxjs": "^5.4.1",
    "ts-helpers": "1.1.2",
    "web-animations-js": "^2.3.1",
    "zone.js": "^0.8.14"
  },
  "devDependencies": {
    "@angular/cli": "1.2.7",
    "@angular/compiler-cli": "4.3.3",
    "@angular/language-service": "4.3.3",
    "@angular/service-worker": "1.0.0-beta.16",
    "@ionic/app-scripts": "2.1.3",
    "@ionic/cli-plugin-cordova": "1.5.0",
    "@ionic/cli-plugin-ionic-angular": "1.4.0",
    "@ionic/cli-plugin-proxy": "1.4.0",
    "@types/jasmine": "~2.5.53",
    "@types/jasminewd2": "~2.0.2",
    "@types/node": "~6.0.60",
    "codelyzer": "~3.0.1",
    "concurrently": "^3.4.0",
    "cordova": "6.5.0",
    "cpx": "1.5.0",
    "cross-conf-env": "1.0.7",
    "gulp": "^3.9.1",
    "ionic": "2.2.3",
    "jasmine-core": "~2.6.2",
    "jasmine-spec-reporter": "~4.1.0",
    "karma": "~1.7.0",
    "karma-chrome-launcher": "~2.1.1",
    "karma-cli": "~1.0.1",
    "karma-coverage-istanbul-reporter": "^1.2.1",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "node-sass": "^4.5.2",
    "protractor": "~5.1.2",
    "pwa-manifest-cli": "1.1.2",
    "replace": "^0.3.0",
    "sleep-ms": "^2.0.1",
    "ts-node": "~3.0.4",
    "tslint": "~5.3.2",
    "typescript": "~2.3.3"
  }
}
